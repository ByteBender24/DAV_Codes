# -*- coding: utf-8 -*-
"""ml-1-UG.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1vsMz78Ctv3Jp1n8yRHwSqOS4cWlp2bn5

1. Load the Dataset
"""

import pandas as pd

# Load dataset
data = pd.read_csv('your_dataset.csv')
print(data.head())

"""2. Explore the Dataset"""

print(data.info())
print(data.describe())

"""Visualize the relationship between variables:"""

import matplotlib.pyplot as plt
import seaborn as sns

sns.pairplot(data)
plt.show()

"""3. Split the Dataset"""

from sklearn.model_selection import train_test_split

# Assuming 'target' is the dependent variable
X = data[['feature1', 'feature2', 'feature3']]  # Replace with actual column names
y = data['target']

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

"""4. Build the Linear Regression Model"""

from sklearn.linear_model import LinearRegression

# Initialize the model
model = LinearRegression()

# Train the model
model.fit(X_train, y_train)

# Print coefficients
print("Coefficients:", model.coef_)
print("Intercept:", model.intercept_)

"""5. Evaluate the Model"""

from sklearn.metrics import mean_squared_error, r2_score

# Make predictions
y_pred = model.predict(X_test)

# Evaluate performance
mse = mean_squared_error(y_test, y_pred)
r2 = r2_score(y_test, y_pred)

print("Mean Squared Error:", mse)
print("R-squared:", r2)

"""6. Visualize Results"""

# Scatter plot of actual vs predicted values
plt.scatter(y_test, y_pred)
plt.xlabel("Actual Values")
plt.ylabel("Predicted Values")
plt.title("Actual vs Predicted")
plt.show()